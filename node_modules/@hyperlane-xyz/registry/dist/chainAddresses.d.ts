export declare const chainAddresses: {
    abstract: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    abstracttestnet: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    alephzeroevmmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    alephzeroevmtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    alfajores: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    ancient8: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    apechain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    appchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    arbitrum: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    arbitrumnova: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    arbitrumsepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    arcadiatestnet2: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    artela: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    arthera: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    artheratestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    astar: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    astarzkevm: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    aurora: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    auroratestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    avalanche: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    b3: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    base: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    basesepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    berabartio: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    berachain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    bitlayer: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    blast: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    blastsepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    bob: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    boba: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    bobabnb: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    bobabnbtestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    bsc: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    bsctestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    bsquared: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    camptestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    canto: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    cantotestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    celo: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    cheesechain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    chilizmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    chronicleyellowstone: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    citreatestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    conflux: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    connextsepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    conwai: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    coredao: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    corn: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    cyber: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    deepbrainchaintestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    degenchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    dodotestnet: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    dogechain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    duckchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    echos: {
        domainRoutingIsmFactory: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    eclipsemainnet: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    ecotestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    endurance: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    ethereum: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    euphoriatestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    everclear: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    evmos: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    fantom: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    fhenixtestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    flame: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    flametestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    flare: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    flowmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    form: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    forma: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    formtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    fraxtal: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    fraxtaltestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    fuji: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    fusemainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    galadrieldevnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    glue: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    gnosis: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    gnosischiadotestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    gravity: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    guru: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    harmony: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    harmonytestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    hemi: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    heneztestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    holesky: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    humanitytestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    hyperliquidevmtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    immutablezkevmmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    inclusivelayertestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    inevm: {
        aggregationHook: string;
        customHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    injective: {
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    ink: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    inksepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    kaia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    kalychain: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    koitestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    kroma: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    linea: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    lineasepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    lisk: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    lisksepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    lukso: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    lumiaprism: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    mantapacific: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    mantapacifictestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    mantle: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    mantlesepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    matchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    merlin: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    metal: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    metall2testnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    metertestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    metis: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    mint: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    mitosistestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    mode: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    modetestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    molten: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    monadtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    moonbase: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    moonbeam: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    moonriver: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    morph: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    neoxt4: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    nero: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    neutron: {
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    odysseytestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    oortmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    opbnb: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    opbnbtestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    opengradienttestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    optimism: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    optimismsepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    orderly: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    osmosis: {
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    piccadilly: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    plumetestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    polygon: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    polygonamoy: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    polygonzkevm: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    polynomialfi: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    prom: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    proofofplay: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    pulsechain: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    rarichain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    reactivekopli: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    real: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    redstone: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    rivalz: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    rootstockmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    rootstocktestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    sanko: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sapphiretestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    scroll: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    scrollsepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sei: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sepolia: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    shibarium: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sketchpad: {
        domainRoutingIsmFactory: string;
        mailbox: string;
        merkleTreeHook: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    smartbch: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    snaxchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    solanamainnet: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    solanatestnet: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    solotestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    soneium: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    soneiumtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sonic: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sonicblaze: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    sonicsvm: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    sonicsvmtestnet: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    sonictestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    soon: {
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    sophonsepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    storyodysseytestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    storytestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    stride: {
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        validatorAnnounce: string;
    };
    suavetoliman: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    subtensortestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    superpositionmainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    superpositiontestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    superseed: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    superseedtestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    swell: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    taiko: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    taikohekla: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    tangle: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    tangletestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    telos: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    torus: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    treasure: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    treasuretopaz: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    trumpchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    u2utestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    unichain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    unichaintestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    unitzero: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    vana: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    viction: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        testTokenRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    wanchaintestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    weavevmtestnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    worldchain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    xai: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    xlayer: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    xpla: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    zeronetwork: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    zetachain: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    zircuit: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    zklink: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    zksync: {
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackDomainRoutingHook: string;
        fallbackRoutingHook: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    zksyncsepolia: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
    zoramainnet: {
        aggregationHook: string;
        domainRoutingIsm: string;
        domainRoutingIsmFactory: string;
        fallbackRoutingHook: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        interchainSecurityModule: string;
        mailbox: string;
        merkleTreeHook: string;
        pausableHook: string;
        pausableIsm: string;
        protocolFee: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsm: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        storageGasOracle: string;
        testRecipient: string;
        timelockController: string;
        validatorAnnounce: string;
    };
    zoratestnet: {
        domainRoutingIsmFactory: string;
        interchainAccountIsm: string;
        interchainAccountRouter: string;
        interchainGasPaymaster: string;
        mailbox: string;
        merkleTreeHook: string;
        proxyAdmin: string;
        staticAggregationHookFactory: string;
        staticAggregationIsmFactory: string;
        staticMerkleRootMultisigIsmFactory: string;
        staticMerkleRootWeightedMultisigIsmFactory: string;
        staticMessageIdMultisigIsmFactory: string;
        staticMessageIdWeightedMultisigIsmFactory: string;
        testRecipient: string;
        validatorAnnounce: string;
    };
};
