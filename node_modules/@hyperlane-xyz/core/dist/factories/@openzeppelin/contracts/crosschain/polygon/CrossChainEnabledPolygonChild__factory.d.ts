import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { CrossChainEnabledPolygonChild, CrossChainEnabledPolygonChildInterface } from "../../../../../@openzeppelin/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.js";
export declare class CrossChainEnabledPolygonChild__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "NotCrossChainCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "rootMessageSender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "processMessageFromRoot";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): CrossChainEnabledPolygonChildInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CrossChainEnabledPolygonChild;
}
//# sourceMappingURL=CrossChainEnabledPolygonChild__factory.d.ts.map