import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMessagingContext, IMessagingContextInterface } from "../../../../../@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.js";
export declare class IMessagingContext__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "getSendContext";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "dstEid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isSendingMessage";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IMessagingContextInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IMessagingContext;
}
//# sourceMappingURL=IMessagingContext__factory.d.ts.map