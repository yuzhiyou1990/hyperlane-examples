import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMessageLibManager, IMessageLibManagerInterface } from "../../../../../@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.js";
export declare class IMessageLibManager__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "oldLib";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newLib";
            readonly type: "address";
        }];
        readonly name: "DefaultReceiveLibrarySet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "oldLib";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "expiry";
            readonly type: "uint256";
        }];
        readonly name: "DefaultReceiveLibraryTimeoutSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newLib";
            readonly type: "address";
        }];
        readonly name: "DefaultSendLibrarySet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newLib";
            readonly type: "address";
        }];
        readonly name: "LibraryRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "oldLib";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newLib";
            readonly type: "address";
        }];
        readonly name: "ReceiveLibrarySet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "oldLib";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timeout";
            readonly type: "uint256";
        }];
        readonly name: "ReceiveLibraryTimeoutSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newLib";
            readonly type: "address";
        }];
        readonly name: "SendLibrarySet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "defaultReceiveLibrary";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "defaultReceiveLibraryTimeout";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "lib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiry";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "defaultSendLibrary";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_oapp";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "_configType";
            readonly type: "uint32";
        }];
        readonly name: "getConfig";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "config";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "getReceiveLibrary";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "lib";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "isDefault";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRegisteredLibraries";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "getSendLibrary";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "lib";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "isDefaultSendLibrary";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }];
        readonly name: "isRegisteredLibrary";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "isSupportedEid";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }];
        readonly name: "receiveLibraryTimeout";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "lib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiry";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }];
        readonly name: "registerLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_oapp";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "eid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "configType";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes";
                readonly name: "config";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SetConfigParam[]";
            readonly name: "_params";
            readonly type: "tuple[]";
        }];
        readonly name: "setConfig";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_newLib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_timeout";
            readonly type: "uint256";
        }];
        readonly name: "setDefaultReceiveLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_expiry";
            readonly type: "uint256";
        }];
        readonly name: "setDefaultReceiveLibraryTimeout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_newLib";
            readonly type: "address";
        }];
        readonly name: "setDefaultSendLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_oapp";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_newLib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_gracePeriod";
            readonly type: "uint256";
        }];
        readonly name: "setReceiveLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_oapp";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_lib";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_gracePeriod";
            readonly type: "uint256";
        }];
        readonly name: "setReceiveLibraryTimeout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_oapp";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_eid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_newLib";
            readonly type: "address";
        }];
        readonly name: "setSendLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IMessageLibManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IMessageLibManager;
}
//# sourceMappingURL=IMessageLibManager__factory.d.ts.map