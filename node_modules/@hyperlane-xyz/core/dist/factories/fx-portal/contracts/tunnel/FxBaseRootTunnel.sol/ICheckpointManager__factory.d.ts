import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ICheckpointManager, ICheckpointManagerInterface } from "../../../../../fx-portal/contracts/tunnel/FxBaseRootTunnel.sol/ICheckpointManager.js";
type ICheckpointManagerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ICheckpointManager__factory extends ContractFactory {
    constructor(...args: ICheckpointManagerConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<ICheckpointManager>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): ICheckpointManager;
    connect(signer: Signer): ICheckpointManager__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061010d806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806341539d4a14602d575b600080fd5b607d603836600460bf565b600060208190529081526040902080546001820154600283015460038401546004909401549293919290919073ffffffffffffffffffffffffffffffffffffffff1685565b60408051958652602086019490945292840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00160405180910390f35b60006020828403121560d057600080fd5b503591905056fea26469706673582212206ef373640ac645a2e6f231f14a5c95a96863fd97a69584e90076fddf687357b764736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "headerBlocks";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "root";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "start";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "end";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "createdAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "proposer";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ICheckpointManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ICheckpointManager;
}
export {};
//# sourceMappingURL=ICheckpointManager__factory.d.ts.map