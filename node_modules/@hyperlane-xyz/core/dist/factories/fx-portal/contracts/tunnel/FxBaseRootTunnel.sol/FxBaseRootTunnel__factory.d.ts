import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { FxBaseRootTunnel, FxBaseRootTunnelInterface } from "../../../../../fx-portal/contracts/tunnel/FxBaseRootTunnel.sol/FxBaseRootTunnel.js";
export declare class FxBaseRootTunnel__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "SEND_MESSAGE_EVENT_SIG";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "checkpointManager";
        readonly outputs: readonly [{
            readonly internalType: "contract ICheckpointManager";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "fxChildTunnel";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "fxRoot";
        readonly outputs: readonly [{
            readonly internalType: "contract IFxStateSender";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "processedExits";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "inputData";
            readonly type: "bytes";
        }];
        readonly name: "receiveMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fxChildTunnel";
            readonly type: "address";
        }];
        readonly name: "setFxChildTunnel";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): FxBaseRootTunnelInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): FxBaseRootTunnel;
}
//# sourceMappingURL=FxBaseRootTunnel__factory.d.ts.map