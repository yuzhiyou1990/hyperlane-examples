import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ICcipReadIsm, ICcipReadIsmInterface } from "../../../../contracts/interfaces/isms/ICcipReadIsm.js";
export declare class ICcipReadIsm__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "string[]";
            readonly name: "urls";
            readonly type: "string[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "callData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes4";
            readonly name: "callbackFunction";
            readonly type: "bytes4";
        }, {
            readonly internalType: "bytes";
            readonly name: "extraData";
            readonly type: "bytes";
        }];
        readonly name: "OffchainLookup";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "getOffchainVerifyInfo";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "moduleType";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "verify";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ICcipReadIsmInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ICcipReadIsm;
}
//# sourceMappingURL=ICcipReadIsm__factory.d.ts.map