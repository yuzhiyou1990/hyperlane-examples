import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IThresholdAddressFactory, IThresholdAddressFactoryInterface } from "../../../contracts/interfaces/IThresholdAddressFactory.js";
export declare class IThresholdAddressFactory__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_values";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint8";
            readonly name: "_threshold";
            readonly type: "uint8";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IThresholdAddressFactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IThresholdAddressFactory;
}
//# sourceMappingURL=IThresholdAddressFactory__factory.d.ts.map