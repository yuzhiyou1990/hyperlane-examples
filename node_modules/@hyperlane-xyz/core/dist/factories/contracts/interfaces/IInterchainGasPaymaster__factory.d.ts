import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IInterchainGasPaymaster, IInterchainGasPaymasterInterface } from "../../../contracts/interfaces/IInterchainGasPaymaster.js";
export declare class IInterchainGasPaymaster__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "messageId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "gasAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "payment";
            readonly type: "uint256";
        }];
        readonly name: "GasPayment";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_messageId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_gasAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_refundAddress";
            readonly type: "address";
        }];
        readonly name: "payForGas";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_gasAmount";
            readonly type: "uint256";
        }];
        readonly name: "quoteGasPayment";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IInterchainGasPaymasterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IInterchainGasPaymaster;
}
//# sourceMappingURL=IInterchainGasPaymaster__factory.d.ts.map