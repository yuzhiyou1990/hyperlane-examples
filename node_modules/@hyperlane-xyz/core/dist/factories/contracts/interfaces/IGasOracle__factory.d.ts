import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IGasOracle, IGasOracleInterface } from "../../../contracts/interfaces/IGasOracle.js";
export declare class IGasOracle__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }];
        readonly name: "getExchangeRateAndGasPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "tokenExchangeRate";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "gasPrice";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IGasOracleInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IGasOracle;
}
//# sourceMappingURL=IGasOracle__factory.d.ts.map