import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOptimismPortal, IOptimismPortalInterface } from "../../../../contracts/interfaces/optimism/IOptimismPortal.js";
export declare class IOptimismPortal__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "value";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IOptimismPortal.WithdrawalTransaction";
            readonly name: "_tx";
            readonly type: "tuple";
        }];
        readonly name: "finalizeWithdrawalTransaction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IOptimismPortalInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IOptimismPortal;
}
//# sourceMappingURL=IOptimismPortal__factory.d.ts.map