import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRemoteChallenger, IRemoteChallengerInterface } from "../../../../contracts/interfaces/avs/IRemoteChallenger.js";
export declare class IRemoteChallenger__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "challengeDelayBlocks";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "handleChallenge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IRemoteChallengerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IRemoteChallenger;
}
//# sourceMappingURL=IRemoteChallenger__factory.d.ts.map