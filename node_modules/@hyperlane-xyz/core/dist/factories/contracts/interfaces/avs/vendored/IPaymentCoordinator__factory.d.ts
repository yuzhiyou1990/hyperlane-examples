import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IPaymentCoordinator, IPaymentCoordinatorInterface } from "../../../../../contracts/interfaces/avs/vendored/IPaymentCoordinator.js";
export declare class IPaymentCoordinator__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct IPaymentCoordinator.StrategyAndMultiplier[]";
                readonly name: "strategiesAndMultipliers";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTimestamp";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "duration";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IPaymentCoordinator.RangePayment[]";
            readonly name: "rangePayments";
            readonly type: "tuple[]";
        }];
        readonly name: "payForRange";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IPaymentCoordinatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IPaymentCoordinator;
}
//# sourceMappingURL=IPaymentCoordinator__factory.d.ts.map