import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { AbstractMerkleRootMultisigIsm, AbstractMerkleRootMultisigIsmInterface } from "../../../../contracts/isms/multisig/AbstractMerkleRootMultisigIsm.js";
export declare class AbstractMerkleRootMultisigIsm__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "PACKAGE_VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_metadata";
            readonly type: "bytes";
        }];
        readonly name: "signatureCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): AbstractMerkleRootMultisigIsmInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AbstractMerkleRootMultisigIsm;
}
//# sourceMappingURL=AbstractMerkleRootMultisigIsm__factory.d.ts.map