import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ILiquidityLayerAdapter, ILiquidityLayerAdapterInterface } from "../../../../../contracts/middleware/liquidity-layer/interfaces/ILiquidityLayerAdapter.js";
export declare class ILiquidityLayerAdapter__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_originDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_recipientAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_adapterData";
            readonly type: "bytes";
        }];
        readonly name: "receiveTokens";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "sendTokens";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_adapterData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ILiquidityLayerAdapterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ILiquidityLayerAdapter;
}
//# sourceMappingURL=ILiquidityLayerAdapter__factory.d.ts.map