import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LayerZeroTreasuryMock, LayerZeroTreasuryMockInterface } from "../../../../contracts/test/TestLayerZeroTreasury.sol/LayerZeroTreasuryMock.js";
type LayerZeroTreasuryMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class LayerZeroTreasuryMock__factory extends ContractFactory {
    constructor(...args: LayerZeroTreasuryMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<LayerZeroTreasuryMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): LayerZeroTreasuryMock;
    connect(signer: Signer): LayerZeroTreasuryMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102fe8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100765780638da5cb5b1461007e578063f2fde38b146100aa57600080fd5b80631a5e2a361461006c5780633ccfd60b1461006c575b600080fd5b6100746100bd565b005b6100746100c7565b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100746100b836600461028b565b6100d9565b6100c5610195565b565b6100cf610195565b6100c56000610216565b6100e1610195565b73ffffffffffffffffffffffffffffffffffffffff8116610189576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61019281610216565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610180565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561029d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102c157600080fd5b939250505056fea2646970667358221220261c03af171bf8d5770512aeaf801e89adc0ca3f258476476bb59b49b7e4009964736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdrawAlt";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): LayerZeroTreasuryMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): LayerZeroTreasuryMock;
}
export {};
//# sourceMappingURL=LayerZeroTreasuryMock__factory.d.ts.map