import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestLiquidityLayerMessageRecipient, TestLiquidityLayerMessageRecipientInterface } from "../../../contracts/test/TestLiquidityLayerMessageRecipient.js";
type TestLiquidityLayerMessageRecipientConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestLiquidityLayerMessageRecipient__factory extends ContractFactory {
    constructor(...args: TestLiquidityLayerMessageRecipientConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestLiquidityLayerMessageRecipient>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestLiquidityLayerMessageRecipient;
    connect(signer: Signer): TestLiquidityLayerMessageRecipient__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610226806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063352e7eff14610030575b600080fd5b61004361003e3660046100b7565b610045565b005b7fb7c0612375fc7af0365ef6a7c391b5d03e4cecd911abd67aea0d69039d4c722386868686868660405161007e96959493929190610168565b60405180910390a1505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100b257600080fd5b919050565b60008060008060008060a087890312156100d057600080fd5b863563ffffffff811681146100e457600080fd5b955060208701359450604087013567ffffffffffffffff8082111561010857600080fd5b818901915089601f83011261011c57600080fd5b81358181111561012b57600080fd5b8a602082850101111561013d57600080fd5b6020830196508095505050506101556060880161008e565b9150608087013590509295509295509295565b63ffffffff8716815285602082015260a060408201528360a0820152838560c0830137600060c08583010152600060c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f870116830101905073ffffffffffffffffffffffffffffffffffffffff8416606083015282608083015297965050505050505056fea26469706673582212203353df832af59bbabb3c0aad8acba4cce9403b589f68fd171521cd7fda6d13ca64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "origin";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "sender";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "HandledWithTokens";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_origin";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_sender";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "handleWithTokens";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TestLiquidityLayerMessageRecipientInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestLiquidityLayerMessageRecipient;
}
export {};
//# sourceMappingURL=TestLiquidityLayerMessageRecipient__factory.d.ts.map