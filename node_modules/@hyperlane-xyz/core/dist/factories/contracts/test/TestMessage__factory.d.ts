import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestMessage, TestMessageInterface } from "../../../contracts/test/TestMessage.js";
type TestMessageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestMessage__factory extends ContractFactory {
    constructor(...args: TestMessageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestMessage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestMessage;
    connect(signer: Signer): TestMessage__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506105c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063985a5c3111610076578063c97c703a1161005b578063c97c703a14610142578063cb3eb0e114610163578063f45387ba1461017657600080fd5b8063985a5c311461011c578063c81aa9c81461012f57600080fd5b80634e765004146100a85780636dc3c4f7146100ce57806379384787146100e15780637d67c5a7146100f4575b600080fd5b6100bb6100b63660046103e0565b6101ae565b6040519081526020015b60405180910390f35b6100bb6100dc3660046103e0565b6101c9565b6100bb6100ef3660046103e0565b6101dc565b6101076101023660046103e0565b61021d565b60405163ffffffff90911681526020016100c5565b6100bb61012a3660046103e0565b610233565b61010761013d3660046103e0565b61023f565b6101556101503660046103e0565b61024b565b6040516100c5929190610452565b6101076101713660046103e0565b610263565b6101896101843660046103e0565b61026f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c5565b60006101ba838361027b565b63ffffffff1690505b92915050565b60006101d5838361029e565b9392505050565b60006101d583838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102b792505050565b600061022983836102c2565b60ff169392505050565b60006101d583836102e4565b60006101d583836102f4565b3660006102588484610304565b915091509250929050565b60006101d58383610314565b60006101d58383610324565b600061028b60056001848661049f565b610294916104c9565b60e01c9392505050565b60006102ae60296009848661049f565b6101d591610511565b805160209091012090565b60006102d1600182848661049f565b6102da9161054d565b60f81c9392505050565b60006102ae604d602d848661049f565b600061028b602d6029848661049f565b36600061025883604d818761049f565b600061028b60096005848661049f565b60006101d561033384846102e4565b600073ffffffffffffffffffffffffffffffffffffffff8211156103dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f7700000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b5090565b600080602083850312156103f357600080fd5b823567ffffffffffffffff8082111561040b57600080fd5b818501915085601f83011261041f57600080fd5b81358181111561042e57600080fd5b86602082850101111561044057600080fd5b60209290920196919550909350505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b600080858511156104af57600080fd5b838611156104bc57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156105095780818660040360031b1b83161692505b505092915050565b803560208310156101c3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fff0000000000000000000000000000000000000000000000000000000000000081358181169160018510156105095760019490940360031b84901b169092169291505056fea2646970667358221220314666afc586cbbdb481b2e62888b9ac13c322f544ab642c75d7aada02cacd8264736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "body";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_body";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "destination";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destination";
            readonly type: "uint32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "id";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "nonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "origin";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_origin";
            readonly type: "uint32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "recipient";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_recipient";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "recipientAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "sender";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_sender";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_version";
            readonly type: "uint32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestMessageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestMessage;
}
export {};
//# sourceMappingURL=TestMessage__factory.d.ts.map