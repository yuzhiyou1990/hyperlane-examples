import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestSendReceiver, TestSendReceiverInterface } from "../../../contracts/test/TestSendReceiver.js";
type TestSendReceiverConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestSendReceiver__factory extends ContractFactory {
    constructor(...args: TestSendReceiverConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestSendReceiver>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestSendReceiver;
    connect(signer: Signer): TestSendReceiver__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610670806100206000396000f3fe60806040526004361061003f5760003560e01c806312f762221461004457806356d5d4751461006c578063c23ea0d714610081578063d5dda2bd14610094575b600080fd5b34801561005057600080fd5b5061005a61c35081565b60405190815260200160405180910390f35b61007f61007a366004610337565b6100a7565b005b61007f61008f3660046103b6565b61016a565b61007f6100a2366004610401565b61020e565b60006100b16102c2565b905060006100c060108361047c565b159050801561012f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f626c6f636b206861736820656e647320696e2030000000000000000000000000604482015260640160405180910390fd5b6040518281527f1e8284519093f867c8c8de794693d723718c98d6ad442f387dfd50dd1e3d93ba9060200160405180910390a1505050505050565b6040517ffa31de0100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fa31de019034906101c4908790309088908890600401610500565b60206040518083038185885af11580156101e2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102079190610530565b5050505050565b604080516020810182526000815290517f10b83dc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716916310b83dc091349161027791899130918a918a918a90600401610549565b60206040518083038185885af1158015610295573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102ba9190610530565b505050505050565b60006102cf6001436105fa565b40905090565b803563ffffffff811681146102e957600080fd5b919050565b60008083601f84011261030057600080fd5b50813567ffffffffffffffff81111561031857600080fd5b60208301915083602082850101111561033057600080fd5b9250929050565b6000806000806060858703121561034d57600080fd5b610356856102d5565b935060208501359250604085013567ffffffffffffffff81111561037957600080fd5b610385878288016102ee565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103b357600080fd5b50565b600080600080606085870312156103cc57600080fd5b84356103d781610391565b93506103e5602086016102d5565b9250604085013567ffffffffffffffff81111561037957600080fd5b60008060008060006080868803121561041957600080fd5b853561042481610391565b9450610432602087016102d5565b9350604086013567ffffffffffffffff81111561044e57600080fd5b61045a888289016102ee565b909450925050606086013561046e81610391565b809150509295509295909350565b6000826104b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b63ffffffff851681528360208201526060604082015260006105266060830184866104b7565b9695505050505050565b60006020828403121561054257600080fd5b5051919050565b63ffffffff8716815260006020878184015260a0604084015261057060a0840187896104b7565b8381036060850152855180825260005b8181101561059b578781018401518382018501528301610580565b506000828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190506105ef608083018473ffffffffffffffffffffffffffffffffffffffff169052565b979650505050505050565b81810381811115610634577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea264697066735822122005af791961eb78bc9b24a63777ebcfccab38a8eb0e716063c666ab6b34b6e0d364736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "blockHash";
            readonly type: "bytes32";
        }];
        readonly name: "Handled";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "HANDLE_GAS_AMOUNT";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IMailbox";
            readonly name: "_mailbox";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_messageBody";
            readonly type: "bytes";
        }];
        readonly name: "dispatchToSelf";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IMailbox";
            readonly name: "_mailbox";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "dispatchToSelf";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "handle";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): TestSendReceiverInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestSendReceiver;
}
export {};
//# sourceMappingURL=TestSendReceiver__factory.d.ts.map