/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_values",
                type: "address[]",
            },
        ],
        name: "deploy",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_values",
                type: "address[]",
            },
            {
                internalType: "uint8",
                name: "_threshold",
                type: "uint8",
            },
        ],
        name: "deploy",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_values",
                type: "address[]",
            },
        ],
        name: "getAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_values",
                type: "address[]",
            },
            {
                internalType: "uint8",
                name: "_threshold",
                type: "uint8",
            },
        ],
        name: "getAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "implementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610b008061083283390190565b6080516107aa6100886000396000818160b901526102c801526107aa6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ce82905811610050578063ce82905814610124578063d4277ebc14610137578063ed547bf71461014a57600080fd5b80630570b1fa146100775780635c60da1b146100b457806393c44847146100db575b600080fd5b61008a610085366004610574565b61015d565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b6101176040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b6040516100ab91906105da565b61008a610132366004610574565b610171565b61008a61014536600461062b565b610197565b61008a61015836600461062b565b6101bf565b600061016a8383806101bf565b9392505050565b60008080610180858580610295565b9150915061018e8282610305565b95945050505050565b60008060006101a7868686610295565b915091506101b58282610305565b9695505050505050565b60008160ff1660001080156101d7575060ff82168310155b610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064015b60405180910390fd5b600080610250868686610295565b9150915060006102608383610305565b905073ffffffffffffffffffffffffffffffffffffffff81163b6101b55761028a60008484610321565b979650505050505050565b6000606060008585856040516020016102b093929190610688565b604051602081830303815290604052905060006102ed7f000000000000000000000000000000000000000000000000000000000000000083610480565b82516020909301929092209791965090945050505050565b8051602082012060009061031984826104f6565b949350505050565b60008347101561038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610239565b81516000036103f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610239565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff811661016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610239565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf3000000000000000000000000000000000000008485516040516020016104df9594939291906106f5565b604051602081830303815290604052905092915050565b600061016a8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b6020830191508360208260051b850101111561056d57600080fd5b9250929050565b6000806020838503121561058757600080fd5b823567ffffffffffffffff81111561059e57600080fd5b6105aa85828601610528565b90969095509350505050565b60005b838110156105d15781810151838201526020016105b9565b50506000910152565b60208152600082518060208401526105f98160408501602087016105b6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060006040848603121561064057600080fd5b833567ffffffffffffffff81111561065757600080fd5b61066386828701610528565b909450925050602084013560ff8116811461067d57600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156106dd57833573ffffffffffffffffffffffffffffffffffffffff81168082146106c8578384fd5b8452506020938401939092019160010161069c565b5050809250505060ff83166020830152949350505050565b8581527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000851660208201527fffffffffffffffffffffffffff00000000000000000000000000000000000000841660348201526000835161075d8160418501602088016105b6565b60419201918201929092526061019594505050505056fea26469706673582212201afda84aef152f4448c977b87c688384633bcf794b0cab1e66d2f36e01689b8064736f6c63430008130033608060405234801561001057600080fd5b50610ae0806100206000396000f3fe6080604052600436106100655760003560e01c8063aaccd23011610043578063aaccd2301461010b578063e445e7dd14610139578063e5320bb91461015557600080fd5b8063086011b91461006a57806337b02c281461007f57806393c44847146100b5575b600080fd5b61007d610078366004610633565b610185565b005b34801561008b57600080fd5b5061009f61009a36600461069f565b610232565b6040516100ac91906106e1565b60405180910390f35b3480156100c157600080fd5b506100fe6040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b6040516100ac919061073b565b34801561011757600080fd5b5061012b610126366004610633565b610258565b6040519081526020016100ac565b34801561014557600080fd5b50604051600281526020016100ac565b34801561016157600080fd5b5061017561017036600461069f565b610305565b60405190151581526020016100ac565b61018f8484610305565b610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b61022c84848484610327565b50505050565b606061023c610488565b80602001905181019061024f91906107ff565b90505b92915050565b60006102648585610305565b6102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e7400000000000000000000000000006064820152608401610217565b6102fc858585856104b8565b95945050505050565b600081158061024f5750600161031b8484610599565b61ffff16149392505050565b60006103338383610232565b805190915060005b8181101561047f576000838281518110610357576103576108e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663aaccd230898989896040518563ffffffff1660e01b815260040161039d949392919061095a565b602060405180830381865afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de919061098c565b90508382815181106103f2576103f26108e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663086011b9828a8a8a8a6040518663ffffffff1660e01b8152600401610439949392919061095a565b6000604051808303818588803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b5050505050508080610477906109d4565b91505061033b565b50505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b6000806104c58484610232565b80519091506000805b8281101561058d578381815181106104e8576104e86108e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663aaccd2308a8a8a8a6040518563ffffffff1660e01b815260040161052e949392919061095a565b602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f919061098c565b6105799083610a0c565b915080610585816109d4565b9150506104ce565b50979650505050505050565b60006105a6816002610a1f565b60ff168210156105b857506000610252565b826000836105c7826002610a1f565b60ff16926105d793929190610a38565b6105e091610a62565b60f01c9392505050565b60008083601f8401126105fc57600080fd5b50813567ffffffffffffffff81111561061457600080fd5b60208301915083602082850101111561062c57600080fd5b9250929050565b6000806000806040858703121561064957600080fd5b843567ffffffffffffffff8082111561066157600080fd5b61066d888389016105ea565b9096509450602087013591508082111561068657600080fd5b50610693878288016105ea565b95989497509550505050565b600080602083850312156106b257600080fd5b823567ffffffffffffffff8111156106c957600080fd5b6106d5858286016105ea565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561072f57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016106fd565b50909695505050505050565b600060208083528351808285015260005b818110156107685785810183015185820160400152820161074c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff811681146107fa57600080fd5b919050565b6000602080838503121561081257600080fd5b825167ffffffffffffffff8082111561082a57600080fd5b818501915085601f83011261083e57600080fd5b815181811115610850576108506107a7565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610893576108936107a7565b6040529182528482019250838101850191888311156108b157600080fd5b938501935b828510156108d6576108c7856107d6565b845293850193928501926108b6565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60408152600061096e604083018688610911565b8281036020840152610981818587610911565b979650505050505050565b60006020828403121561099e57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0557610a056109a5565b5060010190565b80820180821115610252576102526109a5565b60ff8181168382160190811115610252576102526109a5565b60008085851115610a4857600080fd5b83861115610a5557600080fd5b5050820193919092039150565b7fffff0000000000000000000000000000000000000000000000000000000000008135818116916002851015610aa25780818660020360031b1b83161692505b50509291505056fea26469706673582212201d7adf856e981c2d212d2ba236234b4888972ac2c9fefeb1c77f33d955389fca64736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class StaticAggregationHookFactory__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=StaticAggregationHookFactory__factory.js.map