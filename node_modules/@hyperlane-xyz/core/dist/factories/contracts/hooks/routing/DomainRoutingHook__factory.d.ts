import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DomainRoutingHook, DomainRoutingHookInterface } from "../../../../contracts/hooks/routing/DomainRoutingHook.js";
type DomainRoutingHookConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DomainRoutingHook__factory extends ContractFactory {
    constructor(...args: DomainRoutingHookConstructorParams);
    deploy(_mailbox: string, _owner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<DomainRoutingHook>;
    getDeployTransaction(_mailbox: string, _owner: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): DomainRoutingHook;
    connect(signer: Signer): DomainRoutingHook__factory;
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b50604051620015623803806200156283398101604081905262000034916200019c565b81806001600160a01b0381163b620000925760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001039190620001d4565b63ffffffff1660a05262000117336200012d565b50620001259050816200012d565b505062000203565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019757600080fd5b919050565b60008060408385031215620001b057600080fd5b620001bb836200017f565b9150620001cb602084016200017f565b90509250929050565b600060208284031215620001e757600080fd5b815163ffffffff81168114620001fc57600080fd5b9392505050565b60805160a0516113396200022960003960006102260152600061036101526113396000f3fe60806040526004361061010e5760003560e01c80638da5cb5b116100a5578063d5438eae11610074578063e445e7dd11610059578063e445e7dd146103b0578063e5320bb9146103cc578063f2fde38b146103fc57600080fd5b8063d5438eae1461034f578063de523cf31461038357600080fd5b80638da5cb5b1461025d57806393c4484714610288578063aaccd230146102de578063b646f64c1461030c57600080fd5b806376f9d6c7116100e157806376f9d6c71461017d5780637f5a7c7b1461019d578063843cb363146101f45780638d3638f41461021457600080fd5b8063086011b9146101135780630e72cc06146101285780633dfd387314610148578063715018a614610168575b600080fd5b610126610121366004610e90565b61041c565b005b34801561013457600080fd5b50610126610143366004610f25565b6104c9565b34801561015457600080fd5b50610126610163366004610f25565b610612565b34801561017457600080fd5b50610126610753565b34801561018957600080fd5b50610126610198366004610f5b565b610767565b3480156101a957600080fd5b506065546101ca9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561020057600080fd5b5061012661020f366004610f8e565b6107ca565b34801561022057600080fd5b506102487f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101eb565b34801561026957600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166101ca565b34801561029457600080fd5b506102d16040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b6040516101eb9190611027565b3480156102ea57600080fd5b506102fe6102f9366004610e90565b610849565b6040519081526020016101eb565b34801561031857600080fd5b506101ca610327366004611078565b60976020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561035b57600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561038f57600080fd5b506066546101ca9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103bc57600080fd5b50604051600181526020016101eb565b3480156103d857600080fd5b506103ec6103e7366004611093565b6108f6565b60405190151581526020016101eb565b34801561040857600080fd5b50610126610417366004610f25565b6108ff565b61042684846108f6565b6104b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b6104c3848484846109b6565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610503575073ffffffffffffffffffffffffffffffffffffffff8116155b61058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104ae565b610597610a37565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061064c575073ffffffffffffffffffffffffffffffffffffffff8116155b6106d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104ae565b6106e0610a37565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610606565b61075b610a37565b6107656000610ab8565b565b61076f610a37565b63ffffffff91909116600090815260976020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6107d2610a37565b60005b81811015610844576108328383838181106107f2576107f26110d5565b6108089260206040909202019081019150611078565b84848481811061081a5761081a6110d5565b90506040020160200160208101906101989190610f25565b8061083c81611104565b9150506107d5565b505050565b600061085585856108f6565b6108e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084016104ae565b6108ed85858585610b2f565b95945050505050565b60015b92915050565b610907610a37565b73ffffffffffffffffffffffffffffffffffffffff81166109aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104ae565b6109b381610ab8565b50565b6109c08282610bba565b73ffffffffffffffffffffffffffffffffffffffff1663086011b934868686866040518663ffffffff1660e01b81526004016109ff94939291906111ac565b6000604051808303818588803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ae565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610b3b8383610bba565b73ffffffffffffffffffffffffffffffffffffffff1663aaccd230868686866040518563ffffffff1660e01b8152600401610b7994939291906111ac565b602060405180830381865afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed91906111de565b600060976000610bca8585610c84565b63ffffffff16815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169050806108f957610c16610c0b8484610c84565b63ffffffff16610ca7565b604051602001610c2691906111f7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526104ae91600401611027565b6000610c94602d60298486611262565b610c9d9161128c565b60e01c9392505050565b60606000610cb483610d65565b600101905060008167ffffffffffffffff811115610cd457610cd46112d4565b6040519080825280601f01601f191660200182016040528015610cfe576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610d0857509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610dae577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610dda576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610df857662386f26fc10000830492506010015b6305f5e1008310610e10576305f5e100830492506008015b6127108310610e2457612710830492506004015b60648310610e36576064830492506002015b600a83106108f95760010192915050565b60008083601f840112610e5957600080fd5b50813567ffffffffffffffff811115610e7157600080fd5b602083019150836020828501011115610e8957600080fd5b9250929050565b60008060008060408587031215610ea657600080fd5b843567ffffffffffffffff80821115610ebe57600080fd5b610eca88838901610e47565b90965094506020870135915080821115610ee357600080fd5b50610ef087828801610e47565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f2057600080fd5b919050565b600060208284031215610f3757600080fd5b610f4082610efc565b9392505050565b803563ffffffff81168114610f2057600080fd5b60008060408385031215610f6e57600080fd5b610f7783610f47565b9150610f8560208401610efc565b90509250929050565b60008060208385031215610fa157600080fd5b823567ffffffffffffffff80821115610fb957600080fd5b818501915085601f830112610fcd57600080fd5b813581811115610fdc57600080fd5b8660208260061b8501011115610ff157600080fd5b60209290920196919550909350505050565b60005b8381101561101e578181015183820152602001611006565b50506000910152565b6020815260008251806020840152611046816040850160208701611003565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561108a57600080fd5b610f4082610f47565b600080602083850312156110a657600080fd5b823567ffffffffffffffff8111156110bd57600080fd5b6110c985828601610e47565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361115c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006111c0604083018688611163565b82810360208401526111d3818587611163565b979650505050505050565b6000602082840312156111f057600080fd5b5051919050565b7f4e6f20686f6f6b20636f6e6669677572656420666f722064657374696e61746981527f6f6e3a2000000000000000000000000000000000000000000000000000000000602082015260008251611255816024850160208701611003565b9190910160240192915050565b6000808585111561127257600080fd5b8386111561127f57600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156112cc5780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220813bd220bfce09c190a8655c61054528c81003dc884e938a601e2d3e1665763064736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_mailbox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "HookSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "_ism";
            readonly type: "address";
        }];
        readonly name: "IsmSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PACKAGE_VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "hook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "hookType";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "hooks";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "interchainSecurityModule";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "mailbox";
        readonly outputs: readonly [{
            readonly internalType: "contract IMailbox";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "postDispatch";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destination";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "destination";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "hook";
                readonly type: "address";
            }];
            readonly internalType: "struct DomainRoutingHook.HookConfig[]";
            readonly name: "configs";
            readonly type: "tuple[]";
        }];
        readonly name: "setHooks";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_module";
            readonly type: "address";
        }];
        readonly name: "setInterchainSecurityModule";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "supportsMetadata";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): DomainRoutingHookInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DomainRoutingHook;
}
export {};
//# sourceMappingURL=DomainRoutingHook__factory.d.ts.map