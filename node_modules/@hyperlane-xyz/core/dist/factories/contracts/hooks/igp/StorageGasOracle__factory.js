/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "remoteDomain",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "tokenExchangeRate",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "gasPrice",
                type: "uint128",
            },
        ],
        name: "RemoteGasDataSet",
        type: "event",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destinationDomain",
                type: "uint32",
            },
        ],
        name: "getExchangeRateAndGasPrice",
        outputs: [
            {
                internalType: "uint128",
                name: "tokenExchangeRate",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "gasPrice",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "remoteGasData",
        outputs: [
            {
                internalType: "uint128",
                name: "tokenExchangeRate",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "gasPrice",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "remoteDomain",
                        type: "uint32",
                    },
                    {
                        internalType: "uint128",
                        name: "tokenExchangeRate",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "gasPrice",
                        type: "uint128",
                    },
                ],
                internalType: "struct StorageGasOracle.RemoteGasDataConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "setRemoteGasData",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "remoteDomain",
                        type: "uint32",
                    },
                    {
                        internalType: "uint128",
                        name: "tokenExchangeRate",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "gasPrice",
                        type: "uint128",
                    },
                ],
                internalType: "struct StorageGasOracle.RemoteGasDataConfig[]",
                name: "_configs",
                type: "tuple[]",
            },
        ],
        name: "setRemoteGasDataConfigs",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107cd8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806393c448471161005b57806393c4484714610166578063b08e56d0146101af578063f2fde38b146101f9578063f3a1495f1461020c57600080fd5b806360fcef7c1461008d578063698faffc14610121578063715018a6146101365780638da5cb5b1461013e575b600080fd5b6100f361009b36600461057b565b63ffffffff166000908152600160209081526040918290208251808401909352546fffffffffffffffffffffffffffffffff808216808552700100000000000000000000000000000000909204169290910182905291565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b61013461012f3660046105a8565b61021f565b005b61013461026b565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b6101a26040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b604051610118919061061d565b6100f36101bd36600461057b565b6001602052600090815260409020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610134610207366004610689565b61027f565b61013461021a3660046106bf565b61033b565b61022761034c565b8060005b8181101561026557610253848483818110610248576102486106d7565b9050606002016103cd565b8061025d81610706565b91505061022b565b50505050565b61027361034c565b61027d6000610506565b565b61028761034c565b73ffffffffffffffffffffffffffffffffffffffff811661032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61033881610506565b50565b61034361034c565b610338816103cd565b60005473ffffffffffffffffffffffffffffffffffffffff16331461027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610326565b60405180604001604052808260200160208101906103eb9190610765565b6fffffffffffffffffffffffffffffffff1681526020016104126060840160408501610765565b6fffffffffffffffffffffffffffffffff16905260016000610437602085018561057b565b63ffffffff1681526020808201929092526040016000208251928201516fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000029316929092179091556104909082018261057b565b63ffffffff167fb48c1cb713397fc0c0649596c221270fec0b3de3f85ccf6a734411a2fe57a6946104c76040840160208501610765565b6104d76060850160408601610765565b604080516fffffffffffffffffffffffffffffffff93841681529290911660208301520160405180910390a250565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561058d57600080fd5b813563ffffffff811681146105a157600080fd5b9392505050565b600080602083850312156105bb57600080fd5b823567ffffffffffffffff808211156105d357600080fd5b818501915085601f8301126105e757600080fd5b8135818111156105f657600080fd5b86602060608302850101111561060b57600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b8181101561064a5785810183015185820160400152820161062e565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561069b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105a157600080fd5b6000606082840312156106d157600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361075e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561077757600080fd5b81356fffffffffffffffffffffffffffffffff811681146105a157600080fdfea26469706673582212205fb90c4cd39e9a254352fe23b65d40200a9bdbcc4a523617820a9f16515448cf64736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class StorageGasOracle__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=StorageGasOracle__factory.js.map