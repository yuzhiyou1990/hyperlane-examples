/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "contract HypERC4626",
                name: "_underlying",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_wrappedAmount",
                type: "uint256",
            },
        ],
        name: "getUnderlyingAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_underlyingAmount",
                type: "uint256",
            },
        ],
        name: "getWrappedAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "underlying",
        outputs: [
            {
                internalType: "contract HypERC4626",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "underlyingPerWrapped",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_wrappedAmount",
                type: "uint256",
            },
        ],
        name: "unwrap",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_underlyingAmount",
                type: "uint256",
            },
        ],
        name: "wrap",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "wrappedPerUnderlying",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a06040523480156200001157600080fd5b5060405162001ba338038062001ba3833981016040819052620000349162000132565b818160036200004483826200024b565b5060046200005382826200024b565b5050506001600160a01b0390921660805250620003179050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009557600080fd5b81516001600160401b0380821115620000b257620000b26200006d565b604051601f8301601f19908116603f01168101908282118183101715620000dd57620000dd6200006d565b81604052838152602092508683858801011115620000fa57600080fd5b600091505b838210156200011e5785820183015181830184015290820190620000ff565b600093810190920192909252949350505050565b6000806000606084860312156200014857600080fd5b83516001600160a01b03811681146200016057600080fd5b60208501519093506001600160401b03808211156200017e57600080fd5b6200018c8783880162000083565b93506040860151915080821115620001a357600080fd5b50620001b28682870162000083565b9150509250925092565b600181811c90821680620001d157607f821691505b602082108103620001f257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024657600081815260208120601f850160051c81016020861015620002215750805b601f850160051c820191505b8181101562000242578281556001016200022d565b5050505b505050565b81516001600160401b038111156200026757620002676200006d565b6200027f81620002788454620001bc565b84620001f8565b602080601f831160018114620002b757600084156200029e5750858301515b600019600386901b1c1916600185901b17855562000242565b600085815260208120601f198616915b82811015620002e857888601518255948401946001909101908401620002c7565b5085821015620003075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161182a62000379600039600081816102090152818161042701528181610463015281816105920152818161069d015281816108150152818161091a015281816109db01528181610a9701528181610b9e0152610c65015261182a6000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063b399ae1d11610081578063de0e9a3e11610066578063de0e9a3e1461033e578063df91d0b914610351578063ea598cb01461036457600080fd5b8063b399ae1d146102f0578063dd62ed3e146102f857600080fd5b806395d89b41116100b257806395d89b41146102c2578063a457c2d7146102ca578063a9059cbb146102dd57600080fd5b806370a082311461025057806393c448471461028657600080fd5b806323b872dd11610124578063395093511161010957806339509351146101de57806355f2a4a0146101f15780636f307dc31461020457600080fd5b806323b872dd146101b1578063313ce567146101c457600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd14610197578063196ec09c146101a9575b600080fd5b61015e610377565b60405161016b9190611452565b60405180910390f35b6101876101823660046114e7565b610409565b604051901515815260200161016b565b6002545b60405190815260200161016b565b61019b610423565b6101876101bf366004611511565b61056a565b6101cc61058e565b60405160ff909116815260200161016b565b6101876101ec3660046114e7565b61061f565b61019b6101ff36600461154d565b61066b565b61022b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016b565b61019b61025e366004611566565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61015e6040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b61015e61071e565b6101876102d83660046114e7565b61072d565b6101876102eb3660046114e7565b610803565b61019b610811565b61019b610306366004611588565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61019b61034c36600461154d565b610857565b61019b61035f36600461154d565b610a65565b61019b61037236600461154d565b610adb565b606060038054610386906115bb565b80601f01602080910402602001604051908101604052809291908181526020018280546103b2906115bb565b80156103ff5780601f106103d4576101008083540402835291602001916103ff565b820191906000526020600020905b8154815290600101906020018083116103e257829003601f168201915b5050505050905090565b600033610417818585610ca9565b60019150505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e0b231fa7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f0919061160e565b6104fb90600a611780565b61050690600161178f565b6040518263ffffffff1660e01b815260040161052491815260200190565b602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906117a6565b905090565b600033610578858285610e5d565b610583858585610f34565b506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610565919061160e565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061041790829086906106669087906117bf565b610ca9565b6040517f7fe0c850000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690637fe0c850906024015b602060405180830381865afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d91906117a6565b606060048054610386906115bb565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105838286868403610ca9565b600033610417818585610f34565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637fe0c8506104f061058e565b60008082116108e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f57487970455243343632363a20756e7772617020616d6f756e74206d7573742060448201527f62652067726561746572207468616e203000000000000000000000000000000060648201526084016107ed565b6040517f7fe0c850000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690637fe0c85090602401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a91906117a6565b90506109a633846111a3565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044015b6020604051808303816000875af1158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e91906117d2565b5092915050565b6040517fe0b231fa000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e0b231fa906024016106dd565b6000808211610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f57487970455243343632363a207772617020616d6f756e74206d75737420626560448201527f2067726561746572207468616e2030000000000000000000000000000000000060648201526084016107ed565b6040517fe0b231fa000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e0b231fa90602401602060405180830381865afa158015610bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1e91906117a6565b9050610c2a338261135f565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd90606401610a1b565b73ffffffffffffffffffffffffffffffffffffffff8316610d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff8216610dee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f2e5781811015610f21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107ed565b610f2e8484848403610ca9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff821661107a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611130576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f2e565b73ffffffffffffffffffffffffffffffffffffffff8216611246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156112fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016107ed565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610e50565b73ffffffffffffffffffffffffffffffffffffffff82166113dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107ed565b80600260008282546113ee91906117bf565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561147f57858101830151858201604001528201611463565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146114e257600080fd5b919050565b600080604083850312156114fa57600080fd5b611503836114be565b946020939093013593505050565b60008060006060848603121561152657600080fd5b61152f846114be565b925061153d602085016114be565b9150604084013590509250925092565b60006020828403121561155f57600080fd5b5035919050565b60006020828403121561157857600080fd5b611581826114be565b9392505050565b6000806040838503121561159b57600080fd5b6115a4836114be565b91506115b2602084016114be565b90509250929050565b600181811c908216806115cf57607f821691505b602082108103611608577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561162057600080fd5b815160ff8116811461158157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b808511156116b957817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561169f5761169f611631565b808516156116ac57918102915b93841c9390800290611665565b509250929050565b6000826116d05750600161041d565b816116dd5750600061041d565b81600181146116f357600281146116fd57611719565b600191505061041d565b60ff84111561170e5761170e611631565b50506001821b61041d565b5060208310610133831016604e8410600b841016171561173c575081810a61041d565b6117468383611660565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561177857611778611631565b029392505050565b600061158160ff8416836116c1565b808202811582820484141761041d5761041d611631565b6000602082840312156117b857600080fd5b5051919050565b8082018082111561041d5761041d611631565b6000602082840312156117e457600080fd5b8151801515811461158157600080fdfea26469706673582212203fc35a444d873a8f3c89eaeb52b20d9de8b6da10ec693b553c5608e7d450cbf064736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class WHypERC4626__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_underlying, name, symbol, overrides) {
        return super.deploy(_underlying, name, symbol, overrides || {});
    }
    getDeployTransaction(_underlying, name, symbol, overrides) {
        return super.getDeployTransaction(_underlying, name, symbol, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=WHypERC4626__factory.js.map