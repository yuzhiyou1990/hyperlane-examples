/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IDelegationManager",
                name: "_delegationManager",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "InsufficientSignedStake",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientWeight",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidLength",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidQuorum",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidReferenceBlock",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSignature",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSignedWeight",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidThreshold",
        type: "error",
    },
    {
        inputs: [],
        name: "LengthMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "MustUpdateAllOperators",
        type: "error",
    },
    {
        inputs: [],
        name: "NotSorted",
        type: "error",
    },
    {
        inputs: [],
        name: "OperatorAlreadyRegistered",
        type: "error",
    },
    {
        inputs: [],
        name: "OperatorNotRegistered",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_old",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_new",
                type: "uint256",
            },
        ],
        name: "MinimumWeightUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_avs",
                type: "address",
            },
        ],
        name: "OperatorDeregistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_avs",
                type: "address",
            },
        ],
        name: "OperatorRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "oldWeight",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newWeight",
                type: "uint256",
            },
        ],
        name: "OperatorWeightUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "contract IStrategy",
                                name: "strategy",
                                type: "address",
                            },
                            {
                                internalType: "uint96",
                                name: "multiplier",
                                type: "uint96",
                            },
                        ],
                        internalType: "struct StrategyParams[]",
                        name: "strategies",
                        type: "tuple[]",
                    },
                ],
                indexed: false,
                internalType: "struct Quorum",
                name: "_old",
                type: "tuple",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "contract IStrategy",
                                name: "strategy",
                                type: "address",
                            },
                            {
                                internalType: "uint96",
                                name: "multiplier",
                                type: "uint96",
                            },
                        ],
                        internalType: "struct StrategyParams[]",
                        name: "strategies",
                        type: "tuple[]",
                    },
                ],
                indexed: false,
                internalType: "struct Quorum",
                name: "_new",
                type: "tuple",
            },
        ],
        name: "QuorumUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "updateBlock",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newSigningKey",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "oldSigningKey",
                type: "address",
            },
        ],
        name: "SigningKeyUpdate",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_thresholdWeight",
                type: "uint256",
            },
        ],
        name: "ThresholdWeightUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "oldTotalWeight",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newTotalWeight",
                type: "uint256",
            },
        ],
        name: "TotalWeightUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "oldMinimumWeight",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newMinimumWeight",
                type: "uint256",
            },
        ],
        name: "UpdateMinimumWeight",
        type: "event",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "deregisterOperator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
        ],
        name: "getLastCheckpointOperatorWeight",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLastCheckpointThresholdWeight",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_blockNumber",
                type: "uint32",
            },
        ],
        name: "getLastCheckpointThresholdWeightAtBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLastCheckpointTotalWeight",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_blockNumber",
                type: "uint32",
            },
        ],
        name: "getLastCheckpointTotalWeightAtBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
        ],
        name: "getLastestOperatorSigningKey",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_blockNumber",
                type: "uint256",
            },
        ],
        name: "getOperatorSigningKeyAtBlock",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
        ],
        name: "getOperatorWeight",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "_blockNumber",
                type: "uint32",
            },
        ],
        name: "getOperatorWeightAtBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_serviceManager",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_thresholdWeight",
                type: "uint256",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "contract IStrategy",
                                name: "strategy",
                                type: "address",
                            },
                            {
                                internalType: "uint96",
                                name: "multiplier",
                                type: "uint96",
                            },
                        ],
                        internalType: "struct StrategyParams[]",
                        name: "strategies",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Quorum",
                name: "_quorum",
                type: "tuple",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_dataHash",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "_signatureData",
                type: "bytes",
            },
        ],
        name: "isValidSignature",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minimumWeight",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
        ],
        name: "operatorRegistered",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "quorum",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "contract IStrategy",
                                name: "strategy",
                                type: "address",
                            },
                            {
                                internalType: "uint96",
                                name: "multiplier",
                                type: "uint96",
                            },
                        ],
                        internalType: "struct StrategyParams[]",
                        name: "strategies",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Quorum",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes32",
                        name: "salt",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "expiry",
                        type: "uint256",
                    },
                ],
                internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry",
                name: "_operatorSignature",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "_signingKey",
                type: "address",
            },
        ],
        name: "registerOperatorWithSignature",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_newMinimumWeight",
                type: "uint256",
            },
            {
                internalType: "address[]",
                name: "_operators",
                type: "address[]",
            },
        ],
        name: "updateMinimumWeight",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_newSigningKey",
                type: "address",
            },
        ],
        name: "updateOperatorSigningKey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_operators",
                type: "address[]",
            },
        ],
        name: "updateOperators",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[][]",
                name: "operatorsPerQuorum",
                type: "address[][]",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "updateOperatorsForQuorum",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "contract IStrategy",
                                name: "strategy",
                                type: "address",
                            },
                            {
                                internalType: "uint96",
                                name: "multiplier",
                                type: "uint96",
                            },
                        ],
                        internalType: "struct StrategyParams[]",
                        name: "strategies",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Quorum",
                name: "_quorum",
                type: "tuple",
            },
            {
                internalType: "address[]",
                name: "_operators",
                type: "address[]",
            },
        ],
        name: "updateQuorumConfig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_thresholdWeight",
                type: "uint256",
            },
        ],
        name: "updateStakeThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a06040523480156200001157600080fd5b50604051620034be380380620034be833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161342a6200009460003960006108f1015261342a6000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c8063715018a6116100ee57806398ec1ac911610097578063cdcd358111610071578063cdcd3581146103cb578063dec5d1f6146103de578063ec7fbb31146103f1578063f2fde38b1461043a57600080fd5b806398ec1ac91461039d578063ab118995146103b0578063b933fa74146103c357600080fd5b80638da5cb5b116100c85780638da5cb5b1461032357806393c4484714610341578063955f2d901461038a57600080fd5b8063715018a614610300578063743c31f414610308578063857dc1901461031b57600080fd5b80633b242e4a1161015b5780635140a548116101355780635140a5481461028f5780635e1042e8146102a25780635ef53329146102da578063696255be146102ed57600080fd5b80633b242e4a146102615780633d5611f61461027457806340bf2fb71461028757600080fd5b80631703a0181161018c5780631703a018146102315780631e4cd85e14610246578063314f3a491461025957600080fd5b8062cf2ab5146101b25780630dba3394146101c75780631626ba7e146101ed575b600080fd5b6101c56101c0366004612892565b61044d565b005b6101da6101d53660046128e1565b610459565b6040519081526020015b60405180910390f35b6102006101fb366004612995565b610475565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101e4565b6102396104cc565b6040516101e49190612a51565b6101da6102543660046128e1565b610582565b6101da610598565b6101da61026f366004612a64565b6105c7565b6101c5610282366004612a81565b610619565b6067546101da565b6101c561029d366004612b2f565b610628565b6102b56102b0366004612bf9565b61064b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e4565b6101c56102e8366004612c25565b610681565b6101c56102fb366004612c3e565b610692565b6101c56106ac565b6101c5610316366004612a64565b6106c0565b6101c5610713565b60335473ffffffffffffffffffffffffffffffffffffffff166102b5565b61037d6040518060400160405280600581526020017f352e382e3200000000000000000000000000000000000000000000000000000081525081565b6040516101e49190612ce9565b6101da610398366004612cfc565b61071c565b6101da6103ab366004612a64565b610754565b6101c56103be366004612e11565b610a35565b6101da610bd2565b6102b56103d9366004612a64565b610bde565b6101c56103ec366004612e6a565b610c0c565b61042a6103ff366004612a64565b73ffffffffffffffffffffffffffffffffffffffff166000908152606e602052604090205460ff1690565b60405190151581526020016101e4565b6101c5610448366004612a64565b610c1d565b61045681610cd1565b50565b600061046f606b63ffffffff80851690610d2816565b92915050565b6000806000808480602001905181019061048f9190612f90565b9250925092506104a186848484610e2d565b507f1626ba7e0000000000000000000000000000000000000000000000000000000095945050505050565b6040805160208101909152606081526040805160668054602081810284018501855283018181529293919284929091849160009085015b82821015610575576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1681830152825260019092019101610503565b5050505081525050905090565b600061046f606c63ffffffff80851690610d2816565b60006105a4606b610eec565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905090565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d602052604081206105f590610eec565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692915050565b610624338383610f3b565b5050565b6106248260008151811061063e5761063e613065565b60200260200101516110f7565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a6020526040812061067a9083610d28565b9392505050565b610689611133565b610456816111b4565b61069a611133565b6106a3826111f7565b61062481610cd1565b6106b4611133565b6106be600061123d565b565b336000908152606e602052604090205460ff16610709576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045633826112b4565b6106be336113a7565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606d6020526040812061067a9063ffffffff80851690610d2816565b6000806066600001805480602002602001604051908101604052809291908181526020016000905b828210156107ee576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168183015282526001909201910161077c565b505050509050600080825167ffffffffffffffff8111156108115761081161270e565b60405190808252806020026020018201604052801561083a578160200160208202803683370190505b50905060005b83518110156108b05783818151811061085b5761085b613065565b60200260200101516000015182828151811061087957610879613065565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806108a8816130c3565b915050610840565b506040517f9004134700000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063900413479061092890899086906004016130fb565b600060405180830381865afa158015610945573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261098b9190810190613163565b905060005b8451811015610a07578481815181106109ab576109ab613065565b6020026020010151602001516bffffffffffffffffffffffff168282815181106109d7576109d7613065565b60200260200101516109e991906131f4565b6109f3908561320b565b9350806109ff816130c3565b915050610990565b50610a146127108461321e565b92506067548310610a29575090949350505050565b50600095945050505050565b600054610100900460ff1615808015610a555750600054600160ff909116105b80610a6f5750303b158015610a6f575060005460ff166001145b610b00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b5e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610b6984848461154e565b8015610bcc57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006105a4606c610eec565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606a6020526040812061046f90610eec565b610c14611133565b6106a382611644565b610c25611133565b73ffffffffffffffffffffffffffffffffffffffff8116610cc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610af7565b6104568161123d565b6000805b8251811015610d1e57610d00838281518110610cf357610cf3613065565b6020026020010151611802565b610d0a9083613259565b915080610d16816130c3565b915050610cd5565b50610bcc8161198c565b6000438210610d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610af7565b6000610d9e83611a16565b84549091506000610db186848385611ab0565b90508015610e0257610dd686610dc8600184613281565b600091825260209091200190565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610e05565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b600083519050600080600080610e44858851611b0e565b60005b85811015610ed657888181518110610e6157610e61613065565b60200260200101519450610e758588611b81565b9250610e818486611bfa565b610ea5838b8a8481518110610e9857610e98613065565b6020026020010151611c5f565b8493506000610eb48689611cb6565b9050610ec0818461320b565b9250508080610ece906130c3565b915050610e47565b50610ee18187611d2f565b505050505050505050565b80546000908015610f3257610f0683610dc8600184613281565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661067a565b60009392505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152606e602052604090205460ff1615610f9b576040517f42ee68b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60658054906000610fab836130c3565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561100784611802565b90506110128161198c565b505061101e84836112b4565b6068546040517f9926ee7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639926ee7d906110769087908790600401613294565b600060405180830381600087803b15801561109057600080fd5b505af11580156110a4573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090871691507fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c190600090a350505050565b60655481511461044d576040517f2d3df6b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60335473ffffffffffffffffffffffffffffffffffffffff1633146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610af7565b6111bf606c82611dbd565b50506040518181527f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b9060200160405180910390a150565b606780549082905560408051828152602081018490527f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f91015b60405180910390a15050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a602052604081206112e290610eec565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131c57505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152606a6020526040902061134d918416611dbd565b505060405173ffffffffffffffffffffffffffffffffffffffff82811682528084169143918616907fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea13150029060200160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606e602052604090205460ff16611406576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60658054906000611416836132ed565b909155505073ffffffffffffffffffffffffffffffffffffffff81166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905561146f82611802565b905061147a8161198c565b50506068546040517fa364f4da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529091169063a364f4da90602401600060405180830381600087803b1580156114e957600080fd5b505af11580156114fd573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090851691507f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed58090600090a35050565b600054610100900460ff166115e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610af7565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905561162e826111b4565b61163781611644565b61163f611e08565b505050565b61164d81611ea7565b611683576040517fd173577900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051606680546020818102840185018552830181815260009484928491879085015b82821015611719576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16818301528252600190920191016116a7565b50505091525090915060669050600061173282826126e0565b505060005b8251518110156117d05782518051606691908390811061175957611759613065565b6020908102919091018101518254600181018455600093845292829020815191909201516bffffffffffffffffffffffff16740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff90911617910155806117c8816130c3565b915050611737565b507f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e8183604051611231929190613322565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d6020526040812081908190819061183690610eec565b73ffffffffffffffffffffffffffffffffffffffff86166000908152606e60205260409020547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91909116915060ff166118d8576118908184613350565b9250826000036118a35750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d602052604081206118d191611dbd565b5050611932565b6118e185610754565b91506118ed8183613350565b9250826000036119005750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d6020526040902061192f9083611dbd565b50505b604080518281526020810184905273ffffffffffffffffffffffffffffffffffffffff8716917f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594910160405180910390a250909392505050565b600080611999606b610eec565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915060006119c58484613259565b91508190506119d5606b82611dbd565b505060408051848152602081018490527f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b910160405180910390a150915091565b600063ffffffff821115611aac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610af7565b5090565b60005b81831015611b06576000611ac78484611faf565b60008781526020902090915063ffffffff86169082015463ffffffff161115611af257809250611b00565b611afd81600161320b565b93505b50611ab3565b509392505050565b808214611b47576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600003610624576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611bc2576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606a6020526040902061067a9063ffffffff80851690610d2816565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610610624576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c8073ffffffffffffffffffffffffffffffffffffffff84168383611fca565b61163f576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611cf7576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606d6020526040902061067a9063ffffffff80851690610d2816565b6000611d3a82612045565b905080831115611d76576040517f960b41ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d818361209a565b905083811115610bcc576040517fe121632f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611ddb84611dcd43611a16565b611dd6866120ef565b61219d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91821693501690505b9250929050565b600054610100900460ff16611e9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610af7565b6106be6123b2565b8051600090818080805b8451811015611f8d57848181518110611ecc57611ecc613065565b60200260200101516000015192508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611f3f576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b829350848181518110611f5457611f54613065565b6020026020010151602001516bffffffffffffffffffffffff1682611f79919061320b565b915080611f85816130c3565b915050611eb1565b506127108114611fa35750600095945050505050565b50600195945050505050565b6000611fbe600284841861321e565b61067a9084841661320b565b6000806000611fd98585612452565b90925090506000816004811115611ff257611ff2613377565b14801561202a57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061203b575061203b868686612494565b9695505050505050565b6000438263ffffffff1610612086576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f606b63ffffffff80851690610d2816565b6000438263ffffffff16106120db576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f606c63ffffffff80851690610d2816565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115611aac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610af7565b82546000908190801561233f5760006121bb87610dc8600185613281565b60408051808201909152905463ffffffff8082168084526401000000009092047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020840152919250908716101561226c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610af7565b805163ffffffff8088169116036122ca578461228d88610dc8600186613281565b80547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff90921691909117905561232f565b6040805180820190915263ffffffff80881682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b6020015192508391506123aa9050565b50506040805180820190915263ffffffff80851682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b600054610100900460ff16612449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610af7565b6106be3361123d565b60008082516041036124885760208301516040840151606085015160001a61247c878285856125f1565b94509450505050611e01565b50600090506002611e01565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b86866040516024016124cb9291906133a6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161255491906133bf565b600060405180830381855afa9150503d806000811461258f576040519150601f19603f3d011682016040523d82523d6000602084013e612594565b606091505b50915091508180156125a857506020815110155b801561203b575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906125e690830160209081019084016133db565b149695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561262857506000905060036126d7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561267c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166126d0576000600192509250506126d7565b9150600090505b94509492505050565b508054600082559060005260206000209081019061045691905b80821115611aac57600081556001016126fa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff811182821017156127605761276061270e565b60405290565b6040805190810167ffffffffffffffff811182821017156127605761276061270e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127d0576127d061270e565b604052919050565b600067ffffffffffffffff8211156127f2576127f261270e565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461045657600080fd5b600082601f83011261282f57600080fd5b8135602061284461283f836127d8565b612789565b82815260059290921b8401810191818101908684111561286357600080fd5b8286015b8481101561288757803561287a816127fc565b8352918301918301612867565b509695505050505050565b6000602082840312156128a457600080fd5b813567ffffffffffffffff8111156128bb57600080fd5b6128c78482850161281e565b949350505050565b63ffffffff8116811461045657600080fd5b6000602082840312156128f357600080fd5b813561067a816128cf565b600067ffffffffffffffff8211156129185761291861270e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261295557600080fd5b813561296361283f826128fe565b81815284602083860101111561297857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156129a857600080fd5b82359150602083013567ffffffffffffffff8111156129c657600080fd5b6129d285828601612944565b9150509250929050565b8051602080845281518482018190526000926040919083019082870190855b81811015612a44578351805173ffffffffffffffffffffffffffffffffffffffff1684528601516bffffffffffffffffffffffff168684015292850192918401916001016129fb565b5090979650505050505050565b60208152600061067a60208301846129dc565b600060208284031215612a7657600080fd5b813561067a816127fc565b60008060408385031215612a9457600080fd5b823567ffffffffffffffff80821115612aac57600080fd5b9084019060608287031215612ac057600080fd5b604051606081018181108382111715612adb57612adb61270e565b604052823582811115612aed57600080fd5b612af988828601612944565b82525060208301356020820152604083013560408201528094505050506020830135612b24816127fc565b809150509250929050565b60008060408385031215612b4257600080fd5b823567ffffffffffffffff80821115612b5a57600080fd5b818501915085601f830112612b6e57600080fd5b81356020612b7e61283f836127d8565b82815260059290921b84018101918181019089841115612b9d57600080fd5b8286015b84811015612bd557803586811115612bb95760008081fd5b612bc78c86838b010161281e565b845250918301918301612ba1565b5096505086013592505080821115612bec57600080fd5b506129d285828601612944565b60008060408385031215612c0c57600080fd5b8235612c17816127fc565b946020939093013593505050565b600060208284031215612c3757600080fd5b5035919050565b60008060408385031215612c5157600080fd5b82359150602083013567ffffffffffffffff811115612c6f57600080fd5b6129d28582860161281e565b60005b83811015612c96578181015183820152602001612c7e565b50506000910152565b60008151808452612cb7816020860160208601612c7b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061067a6020830184612c9f565b60008060408385031215612d0f57600080fd5b8235612d1a816127fc565b91506020830135612b24816128cf565b60006020808385031215612d3d57600080fd5b612d4561273d565b9150823567ffffffffffffffff811115612d5e57600080fd5b8301601f81018513612d6f57600080fd5b8035612d7d61283f826127d8565b81815260069190911b82018301908381019087831115612d9c57600080fd5b928401925b82841015612e045760408489031215612dba5760008081fd5b612dc2612766565b8435612dcd816127fc565b8152848601356bffffffffffffffffffffffff81168114612dee5760008081fd5b8187015282526040939093019290840190612da1565b8552509295945050505050565b600080600060608486031215612e2657600080fd5b8335612e31816127fc565b925060208401359150604084013567ffffffffffffffff811115612e5457600080fd5b612e6086828701612d2a565b9150509250925092565b60008060408385031215612e7d57600080fd5b823567ffffffffffffffff80821115612e9557600080fd5b612ea186838701612d2a565b93506020850135915080821115612eb757600080fd5b506129d28582860161281e565b600082601f830112612ed557600080fd5b81516020612ee561283f836127d8565b82815260059290921b84018101918181019086841115612f0457600080fd5b8286015b8481101561288757805167ffffffffffffffff811115612f285760008081fd5b8701603f81018913612f3a5760008081fd5b848101516040612f4c61283f836128fe565b8281528b82848601011115612f615760008081fd5b612f7083898301848701612c7b565b8652505050918301918301612f08565b8051612f8b816128cf565b919050565b600080600060608486031215612fa557600080fd5b835167ffffffffffffffff80821115612fbd57600080fd5b818601915086601f830112612fd157600080fd5b81516020612fe161283f836127d8565b82815260059290921b8401810191818101908a84111561300057600080fd5b948201945b83861015613027578551613018816127fc565b82529482019490820190613005565b9189015191975090935050508082111561304057600080fd5b5061304d86828701612ec4565b92505061305c60408501612f80565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130f4576130f4613094565b5060010190565b60006040820173ffffffffffffffffffffffffffffffffffffffff80861684526020604081860152828651808552606087019150828801945060005b81811015613155578551851683529483019491830191600101613137565b509098975050505050505050565b6000602080838503121561317657600080fd5b825167ffffffffffffffff81111561318d57600080fd5b8301601f8101851361319e57600080fd5b80516131ac61283f826127d8565b81815260059190911b820183019083810190878311156131cb57600080fd5b928401925b828410156131e9578351825292840192908401906131d0565b979650505050505050565b808202811582820484141761046f5761046f613094565b8082018082111561046f5761046f613094565b600082613254577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808201828112600083128015821682158216171561327957613279613094565b505092915050565b8181038181111561046f5761046f613094565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260008251606060408401526132cc60a0840182612c9f565b90506020840151606084015260408401516080840152809150509392505050565b6000816132fc576132fc613094565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60408152600061333560408301856129dc565b828103602084015261334781856129dc565b95945050505050565b818103600083128015838313168383128216171561337057613370613094565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8281526040602082015260006128c76040830184612c9f565b600082516133d1818460208701612c7b565b9190910192915050565b6000602082840312156133ed57600080fd5b505191905056fea264697066735822122055ed1b616a1aa5a411483392aef3b34d50e3b0d6d7dfd67b30b0023711f79ce764736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class ECDSAStakeRegistry__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_delegationManager, overrides) {
        return super.deploy(_delegationManager, overrides || {});
    }
    getDeployTransaction(_delegationManager, overrides) {
        return super.getDeployTransaction(_delegationManager, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=ECDSAStakeRegistry__factory.js.map