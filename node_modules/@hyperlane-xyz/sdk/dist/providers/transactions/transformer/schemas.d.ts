import { z } from 'zod';
import { TxTransformerType } from './TxTransformerTypes.js';
export declare const TransformerMetadataSchema: z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
    chain: z.ZodString;
    config: z.ZodObject<{
        origin: z.ZodString;
        owner: z.ZodString;
        localRouter: z.ZodOptional<z.ZodString>;
        routerOverride: z.ZodOptional<z.ZodString>;
        ismOverride: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        owner: string;
        origin: string;
        localRouter?: string | undefined;
        routerOverride?: string | undefined;
        ismOverride?: string | undefined;
    }, {
        owner: string;
        origin: string;
        localRouter?: string | undefined;
        routerOverride?: string | undefined;
        ismOverride?: string | undefined;
    }>;
    hookMetadata: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<TxTransformerType>;
}, "strip", z.ZodTypeAny, {
    type: TxTransformerType;
    chain: string;
    config: {
        owner: string;
        origin: string;
        localRouter?: string | undefined;
        routerOverride?: string | undefined;
        ismOverride?: string | undefined;
    };
    hookMetadata?: string | undefined;
}, {
    type: TxTransformerType;
    chain: string;
    config: {
        owner: string;
        origin: string;
        localRouter?: string | undefined;
        routerOverride?: string | undefined;
        ismOverride?: string | undefined;
    };
    hookMetadata?: string | undefined;
}>]>;
//# sourceMappingURL=schemas.d.ts.map