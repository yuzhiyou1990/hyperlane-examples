import { Address } from '@hyperlane-xyz/utils';
import { HyperlaneContracts } from '../contracts/types.js';
import { ProxyFactoryFactories } from '../deploy/contracts.js';
import { MultiProvider } from '../providers/MultiProvider.js';
import { ChainName } from '../types.js';
import { IsmConfig, RoutingIsmConfig, RoutingIsmDelta } from './types.js';
export declare function calculateDomainRoutingDelta(current: RoutingIsmConfig, target: RoutingIsmConfig): {
    domainsToEnroll: ChainName[];
    domainsToUnenroll: ChainName[];
};
export declare function moduleCanCertainlyVerify(destModule: Address | IsmConfig, multiProvider: MultiProvider, origin: ChainName, destination: ChainName): Promise<boolean>;
export declare function moduleMatchesConfig(chain: ChainName, moduleAddress: Address, config: IsmConfig, multiProvider: MultiProvider, contracts: HyperlaneContracts<ProxyFactoryFactories>, mailbox?: Address): Promise<boolean>;
export declare function routingModuleDelta(destination: ChainName, moduleAddress: Address, config: RoutingIsmConfig, multiProvider: MultiProvider, contracts: HyperlaneContracts<ProxyFactoryFactories>, mailbox?: Address): Promise<RoutingIsmDelta>;
export declare function collectValidators(origin: ChainName, config: IsmConfig): Set<string>;
//# sourceMappingURL=utils.d.ts.map