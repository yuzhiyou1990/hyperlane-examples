/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
export interface InstantiateMsg {
    isms: IsmSet[];
    owner: string;
}
export interface IsmSet {
    address: string;
    domain: number;
}
export type ExecuteMsg = {
    ownable: OwnableMsg;
} | {
    set: {
        ism: IsmSet;
    };
};
export type OwnableMsg = {
    init_ownership_transfer: {
        next_owner: string;
    };
} | {
    revoke_ownership_transfer: {};
} | {
    claim_ownership: {};
};
export type QueryMsg = {
    ownable: OwnableQueryMsg;
} | {
    ism: IsmQueryMsg;
} | {
    routing_ism: RoutingIsmQueryMsg;
};
export type OwnableQueryMsg = {
    get_owner: {};
} | {
    get_pending_owner: {};
};
export type IsmQueryMsg = {
    module_type: {};
} | {
    verify: {
        message: HexBinary;
        metadata: HexBinary;
    };
} | {
    verify_info: {
        message: HexBinary;
    };
};
export type HexBinary = string;
export type RoutingIsmQueryMsg = {
    route: {
        message: HexBinary;
    };
};
export type Addr = string;
export interface OwnerResponse {
    owner: Addr;
}
export interface PendingOwnerResponse {
    pending_owner?: Addr | null;
}
export type IsmType = 'unused' | 'routing' | 'aggregation' | 'legacy_multisig' | 'merkle_root_multisig' | 'message_id_multisig' | 'null' | 'ccip_read';
export interface ModuleTypeResponse {
    type: IsmType;
}
export interface RouteResponse {
    ism: string;
}
export interface VerifyResponse {
    verified: boolean;
}
export interface VerifyInfoResponse {
    threshold: number;
    validators: HexBinary[];
}
//# sourceMappingURL=IsmRouting.types.d.ts.map