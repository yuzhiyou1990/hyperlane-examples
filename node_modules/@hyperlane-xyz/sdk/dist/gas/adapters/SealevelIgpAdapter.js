import { PublicKey } from '@solana/web3.js';
import { deserializeUnchecked } from 'borsh';
import { BaseSealevelAdapter } from '../../app/MultiProtocolApp.js';
import { SealevelAccountDataWrapper } from '../../utils/sealevelSerialization.js';
import { SealevelOverheadIgpDataSchema, } from './serialization.js';
export class SealevelOverheadIgpAdapter extends BaseSealevelAdapter {
    chainName;
    multiProvider;
    addresses;
    constructor(chainName, multiProvider, addresses) {
        super(chainName, multiProvider, addresses);
        this.chainName = chainName;
        this.multiProvider = multiProvider;
        this.addresses = addresses;
    }
    async getAccountInfo() {
        const address = this.addresses.igp;
        const connection = this.getProvider();
        const accountInfo = await connection.getAccountInfo(new PublicKey(address));
        if (!accountInfo)
            throw new Error(`No account info found for ${address}}`);
        const accountData = deserializeUnchecked(SealevelOverheadIgpDataSchema, SealevelAccountDataWrapper, accountInfo.data);
        return accountData.data;
    }
    // https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/rust/sealevel/programs/hyperlane-sealevel-igp/src/pda_seeds.rs#L7
    static deriveIgpProgramPda(igpProgramId) {
        return super.derivePda(['hyperlane_igp', '-', 'program_data'], igpProgramId);
    }
    // https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/rust/sealevel/programs/hyperlane-sealevel-igp/src/pda_seeds.rs#L62
    static deriveGasPaymentPda(igpProgramId, randomWalletPubKey) {
        return super.derivePda(['hyperlane_igp', '-', 'gas_payment', '-', randomWalletPubKey.toBuffer()], igpProgramId);
    }
}
//# sourceMappingURL=SealevelIgpAdapter.js.map