import { z } from 'zod';
export declare const OwnableSchema: z.ZodObject<{
    owner: z.ZodString;
    ownerOverrides: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    owner: string;
    ownerOverrides?: Record<string, string> | undefined;
}, {
    owner: string;
    ownerOverrides?: Record<string, string> | undefined;
}>;
export declare const DeployedOwnableSchema: z.ZodObject<{
    owner: z.ZodString;
    ownerOverrides: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    address: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    owner: string;
    ownerOverrides?: Record<string, string> | undefined;
    address?: string | undefined;
}, {
    owner: string;
    ownerOverrides?: Record<string, string> | undefined;
    address?: string | undefined;
}>;
export declare const PausableSchema: z.ZodObject<{
    owner: z.ZodString;
    ownerOverrides: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    paused: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    owner: string;
    paused: boolean;
    ownerOverrides?: Record<string, string> | undefined;
}, {
    owner: string;
    paused: boolean;
    ownerOverrides?: Record<string, string> | undefined;
}>;
//# sourceMappingURL=schemas.d.ts.map