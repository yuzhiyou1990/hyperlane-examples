// see https://etherscan.io/contract-license-types
export var ExplorerLicenseType;
(function (ExplorerLicenseType) {
    ExplorerLicenseType["NO_LICENSE"] = "1";
    ExplorerLicenseType["UNLICENSED"] = "2";
    ExplorerLicenseType["MIT"] = "3";
    ExplorerLicenseType["GPL2"] = "4";
    ExplorerLicenseType["GPL3"] = "5";
    ExplorerLicenseType["LGPL2"] = "6";
    ExplorerLicenseType["LGPL3"] = "7";
    ExplorerLicenseType["BSD2"] = "8";
    ExplorerLicenseType["BSD3"] = "9";
    ExplorerLicenseType["MPL2"] = "10";
    ExplorerLicenseType["OSL3"] = "11";
    ExplorerLicenseType["APACHE2"] = "12";
    ExplorerLicenseType["AGPL3"] = "13";
    ExplorerLicenseType["BSL"] = "14";
})(ExplorerLicenseType || (ExplorerLicenseType = {}));
export var ExplorerApiActions;
(function (ExplorerApiActions) {
    ExplorerApiActions["GETSOURCECODE"] = "getsourcecode";
    ExplorerApiActions["VERIFY_IMPLEMENTATION"] = "verifysourcecode";
    ExplorerApiActions["VERIFY_PROXY"] = "verifyproxycontract";
    ExplorerApiActions["CHECK_IMPLEMENTATION_STATUS"] = "checkverifystatus";
    ExplorerApiActions["CHECK_PROXY_STATUS"] = "checkproxyverification";
})(ExplorerApiActions || (ExplorerApiActions = {}));
export const EXPLORER_GET_ACTIONS = [
    ExplorerApiActions.CHECK_IMPLEMENTATION_STATUS,
    ExplorerApiActions.CHECK_PROXY_STATUS,
    ExplorerApiActions.GETSOURCECODE,
];
export var ExplorerApiErrors;
(function (ExplorerApiErrors) {
    ExplorerApiErrors["ALREADY_VERIFIED"] = "Contract source code already verified";
    ExplorerApiErrors["ALREADY_VERIFIED_ALT"] = "Already Verified";
    ExplorerApiErrors["NOT_VERIFIED"] = "Contract source code not verified";
    ExplorerApiErrors["VERIFICATION_PENDING"] = "Pending in queue";
    ExplorerApiErrors["PROXY_FAILED"] = "A corresponding implementation contract was unfortunately not detected for the proxy address.";
    ExplorerApiErrors["BYTECODE_MISMATCH"] = "Fail - Unable to verify. Compiled contract deployment bytecode does NOT match the transaction deployment bytecode.";
    ExplorerApiErrors["UNABLE_TO_VERIFY"] = "Fail - Unable to verify";
    ExplorerApiErrors["UNKNOWN_UID"] = "Unknown UID";
})(ExplorerApiErrors || (ExplorerApiErrors = {}));
//# sourceMappingURL=types.js.map