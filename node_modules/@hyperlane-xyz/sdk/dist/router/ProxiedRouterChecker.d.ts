import { AddressesMap } from '../contracts/types.js';
import { ChainName } from '../types.js';
import { HyperlaneRouterChecker } from './HyperlaneRouterChecker.js';
import { RouterApp } from './RouterApps.js';
import { ProxiedFactories, ProxiedRouterConfig } from './types.js';
export declare abstract class ProxiedRouterChecker<Factories extends ProxiedFactories, App extends RouterApp<Factories>, Config extends ProxiedRouterConfig> extends HyperlaneRouterChecker<Factories, App, Config> {
    getOwnableOverrides(chain: ChainName): AddressesMap | undefined;
    checkOwnership(chain: ChainName): Promise<void>;
    checkProxiedContracts(chain: ChainName): Promise<void>;
    checkChain(chain: ChainName): Promise<void>;
}
//# sourceMappingURL=ProxiedRouterChecker.d.ts.map