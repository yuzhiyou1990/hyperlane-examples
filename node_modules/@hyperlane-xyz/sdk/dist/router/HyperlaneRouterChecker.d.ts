import { HyperlaneFactories } from '../contracts/types.js';
import { HyperlaneAppChecker } from '../deploy/HyperlaneAppChecker.js';
import { HyperlaneIsmFactory } from '../ism/HyperlaneIsmFactory.js';
import { MultiProvider } from '../providers/MultiProvider.js';
import { ChainMap, ChainName } from '../types.js';
import { RouterApp } from './RouterApps.js';
import { RouterConfig } from './types.js';
export declare class HyperlaneRouterChecker<Factories extends HyperlaneFactories, App extends RouterApp<Factories>, Config extends RouterConfig> extends HyperlaneAppChecker<App, Config> {
    readonly ismFactory?: HyperlaneIsmFactory | undefined;
    readonly logger: import("pino").default.Logger<never>;
    constructor(multiProvider: MultiProvider, app: App, configMap: ChainMap<Config>, ismFactory?: HyperlaneIsmFactory | undefined, logger?: import("pino").default.Logger<never>);
    checkChain(chain: ChainName): Promise<void>;
    checkMailboxClient(chain: ChainName): Promise<void>;
    checkEnrolledRouters(chain: ChainName): Promise<void>;
}
//# sourceMappingURL=HyperlaneRouterChecker.d.ts.map