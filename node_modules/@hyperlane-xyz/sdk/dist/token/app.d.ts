import { Logger } from 'pino';
import { TokenRouter } from '@hyperlane-xyz/core';
import { ChainMap, ProxiedFactories } from '@hyperlane-xyz/sdk';
import { Address } from '@hyperlane-xyz/utils';
import { HyperlaneAddressesMap, HyperlaneContracts, HyperlaneContractsMap } from '../contracts/types.js';
import { MultiProvider } from '../providers/MultiProvider.js';
import { GasRouterApp } from '../router/RouterApps.js';
import { HypERC20Factories } from './contracts.js';
export declare class HypERC20App extends GasRouterApp<HypERC20Factories & ProxiedFactories, TokenRouter> {
    constructor(contractsMap: HyperlaneContractsMap<HypERC20Factories & ProxiedFactories>, multiProvider: MultiProvider, logger?: Logger, foreignDeployments?: ChainMap<Address>);
    router(contracts: HyperlaneContracts<HypERC20Factories>): TokenRouter;
    static fromAddressesMap(addressesMap: HyperlaneAddressesMap<HypERC20Factories & ProxiedFactories>, multiProvider: MultiProvider): HypERC20App;
}
//# sourceMappingURL=app.d.ts.map