import { ProtocolType } from '@hyperlane-xyz/utils';
import { ProviderType } from '../providers/ProviderType.js';
import { TokenType } from './config.js';
export declare enum TokenStandard {
    Intent = "Intent",
    IntentNative = "IntentNative",
    ERC20 = "ERC20",
    ERC721 = "ERC721",
    EvmNative = "EvmNative",
    EvmHypNative = "EvmHypNative",
    EvmHypCollateral = "EvmHypCollateral",
    EvmHypOwnerCollateral = "EvmHypOwnerCollateral",
    EvmHypRebaseCollateral = "EvmHypRebaseCollateral",
    EvmHypCollateralFiat = "EvmHypCollateralFiat",
    EvmHypSynthetic = "EvmHypSynthetic",
    EvmHypSyntheticRebase = "EvmHypSyntheticRebase",
    EvmHypXERC20 = "EvmHypXERC20",
    EvmHypXERC20Lockbox = "EvmHypXERC20Lockbox",
    SealevelSpl = "SealevelSpl",
    SealevelSpl2022 = "SealevelSpl2022",
    SealevelNative = "SealevelNative",
    SealevelHypNative = "SealevelHypNative",
    SealevelHypCollateral = "SealevelHypCollateral",
    SealevelHypSynthetic = "SealevelHypSynthetic",
    CosmosIcs20 = "CosmosIcs20",
    CosmosIcs721 = "CosmosIcs721",
    CosmosNative = "CosmosNative",
    CosmosIbc = "CosmosIbc",
    CW20 = "CW20",
    CWNative = "CWNative",
    CW721 = "CW721",
    CwHypNative = "CwHypNative",
    CwHypCollateral = "CwHypCollateral",
    CwHypSynthetic = "CwHypSynthetic"
}
export declare const TOKEN_STANDARD_TO_PROTOCOL: Record<TokenStandard, ProtocolType>;
export declare const TOKEN_STANDARD_TO_PROVIDER_TYPE: Record<TokenStandard, ProviderType>;
export declare const TOKEN_NFT_STANDARDS: TokenStandard[];
export declare const TOKEN_COLLATERALIZED_STANDARDS: TokenStandard[];
export declare const XERC20_STANDARDS: TokenStandard[];
export declare const MINT_LIMITED_STANDARDS: TokenStandard[];
export declare const TOKEN_HYP_STANDARDS: TokenStandard[];
export declare const TOKEN_MULTI_CHAIN_STANDARDS: TokenStandard[];
export declare const TOKEN_COSMWASM_STANDARDS: TokenStandard[];
export declare const TOKEN_TYPE_TO_STANDARD: Record<TokenType, TokenStandard>;
export declare const PROTOCOL_TO_NATIVE_STANDARD: Record<ProtocolType, TokenStandard>;
//# sourceMappingURL=TokenStandard.d.ts.map