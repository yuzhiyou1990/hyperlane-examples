"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.L2Forwarder__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_factory",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AlreadyInitialized",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "returnData",
                type: "bytes",
            },
        ],
        name: "CallFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidTeleportation",
        type: "error",
    },
    {
        inputs: [],
        name: "LengthMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyL2ForwarderFactory",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "ZeroTokenBalance",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "tokenAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
            },
        ],
        name: "BridgedToL3",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address[]",
                name: "targets",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "bytes[]",
                name: "datas",
                type: "bytes[]",
            },
        ],
        name: "Rescued",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "l2Token",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "l3FeeTokenL2Addr",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "routerOrInbox",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gasPriceBid",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxSubmissionCost",
                        type: "uint256",
                    },
                ],
                internalType: "struct IL2Forwarder.L2ForwarderParams",
                name: "params",
                type: "tuple",
            },
        ],
        name: "bridgeToL3",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ForwarderFactory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "targets",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
            {
                internalType: "bytes[]",
                name: "datas",
                type: "bytes[]",
            },
        ],
        name: "rescue",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051611d40380380611d4083398101604081905261002f91610055565b6001600160a01b03166080819052600080546001600160a01b0319169091179055610085565b60006020828403121561006757600080fd5b81516001600160a01b038116811461007e57600080fd5b9392505050565b608051611c936100ad60003960008181607c015281816103c601526104b20152611c936000f3fe60806040526004361061005e5760003560e01c8063822681f511610043578063822681f5146100dc5780638da5cb5b146100ef578063c4d66de81461011c57600080fd5b8063377f017a1461006a5780634892b9bd146100c757600080fd5b3661006557005b600080fd5b34801561007657600080fd5b5061009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100da6100d536600461157c565b61013c565b005b6100da6100ea366004611616565b6103ae565b3480156100fb57600080fd5b5060005461009e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561012857600080fd5b506100da610137366004611654565b61049a565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018d576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848314158061019c5750828114155b156101d3576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85811015610364576000808888848181106101f3576101f3611678565b90506020020160208101906102089190611654565b73ffffffffffffffffffffffffffffffffffffffff1687878581811061023057610230611678565b9050602002013586868681811061024957610249611678565b905060200281019061025b91906116a7565b60405161026992919061170c565b60006040518083038185875af1925050503d80600081146102a6576040519150601f19603f3d011682016040523d82523d6000602084013e6102ab565b606091505b50915091508161035a578888848181106102c7576102c7611678565b90506020020160208101906102dc9190611654565b8787858181106102ee576102ee611678565b9050602002013586868681811061030757610307611678565b905060200281019061031991906116a7565b846040517ff2e2c8620000000000000000000000000000000000000000000000000000000081526004016103519594939291906117d3565b60405180910390fd5b50506001016101d6565b507f1ab3eaa5c16a40d4a41370d1e9e92b1941fc38fcc4caf6ff6154ee977f5cf10d86868686868660405161039e969594939291906118f9565b60405180910390a1505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461041d576040517f83edde6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006104476104326040840160208501611654565b6104426060850160408601611654565b6105a0565b9050600081600281111561045d5761045d6119b7565b0361046f5761046b82610657565b5050565b6001816002811115610483576104836119b7565b036104915761046b82610803565b61046b82610b9e565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610509576040517f83edde6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff1615610559576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600073ffffffffffffffffffffffffffffffffffffffff83166105ef576040517f83fe0edc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661061257506000610651565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361064d57506001610651565b5060025b92915050565b600061068161066c6080840160608501611654565b61067c6040850160208601611654565b610ddc565b905047600061069860c085013560a0860135611a15565b6106a29047611a2c565b90506106b46080850160608601611654565b73ffffffffffffffffffffffffffffffffffffffff16634fb1a07b476106e06040880160208901611654565b6106f060a0890160808a01611654565b61070060a08a0160808b01611654565b888a60a001358b60c00135896040518060200160405280600081525060405160200161072d929190611a3f565b6040516020818303038152906040526040518963ffffffff1660e01b815260040161075e9796959493929190611a58565b60006040518083038185885af115801561077c573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107c39190810190611ada565b5060408051848152602081018490527f171c4d2112193c3af539585bcbcf55642479cb62a4772c204417275e773d5bba910160405180910390a150505050565b60006108156040830160208401611654565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611b9a565b90508060000361090a576108bf6040830160208401611654565b6040517f7a952e7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610351565b61094b61091d6080840160608501611654565b8261092e6040860160208701611654565b73ffffffffffffffffffffffffffffffffffffffff169190610f82565b600061095d6080840160608501611654565b6040517fa66b327d000000000000000000000000000000000000000000000000000000008152600060048201819052602482015273ffffffffffffffffffffffffffffffffffffffff919091169063a66b327d90604401602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611b9a565b90506000610a0b60c085013560a0860135611a15565b610a159083611bb3565b90506000610a238285611a2c565b9050610a356080860160608701611654565b73ffffffffffffffffffffffffffffffffffffffff1663549e8426610a6060a0880160808901611654565b8386610a7260a08b0160808c01611654565b610a8260a08c0160808d01611654565b60405160e087901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff95861660048201526024810194909452604484019290925283166064830152909116608482015260a088013560a482015260c088013560c482015260e481018790526101206101048201526000610124820152610144016020604051808303816000875af1158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611b9a565b5060408051828152602081018490527f171c4d2112193c3af539585bcbcf55642479cb62a4772c204417275e773d5bba910160405180910390a15050505050565b6000610bb361066c6080840160608501611654565b9050600060e0830135610bce60c085013560a0860135611a15565b610bd89190611bb3565b90508015610c79576000610bf26080850160608601611654565b73ffffffffffffffffffffffffffffffffffffffff1663fb0e722b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611bc6565b9050610c77818361092e6060880160408901611654565b505b610c896080840160608501611654565b73ffffffffffffffffffffffffffffffffffffffff16634fb1a07b610cb46040860160208701611654565b610cc460a0870160808801611654565b610cd460a0880160808901611654565b868860a001358960c001358a60e00135604051806020016040528060008152508a604051602001610d0793929190611be3565b6040516020818303038152906040526040518863ffffffff1660e01b8152600401610d389796959493929190611a58565b6000604051808303816000875af1158015610d57573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d9d9190810190611ada565b5060408051838152602081018390527f171c4d2112193c3af539585bcbcf55642479cb62a4772c204417275e773d5bba910160405180910390a1505050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f9190611b9a565b905080600003610ec3576040517f7a952e7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610351565b6040517fbda009fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526000919086169063bda009fe90602401602060405180830381865afa158015610f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f579190611bc6565b9050610f7a73ffffffffffffffffffffffffffffffffffffffff8516828461105b565b509392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526110569084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611151565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526110e78482611260565b61114b5760405173ffffffffffffffffffffffffffffffffffffffff84166024820152600060448201526111419085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610fd4565b61114b8482611151565b50505050565b60006111b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113219092919063ffffffff16565b90508051600014806111d45750808060200190518101906111d49190611c0c565b611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610351565b60008060008473ffffffffffffffffffffffffffffffffffffffff168460405161128a9190611c2e565b6000604051808303816000865af19150503d80600081146112c7576040519150601f19603f3d011682016040523d82523d6000602084013e6112cc565b606091505b50915091508180156112f65750805115806112f65750808060200190518101906112f69190611c0c565b8015611318575073ffffffffffffffffffffffffffffffffffffffff85163b15155b95945050505050565b60606113308484600085611338565b949350505050565b6060824710156113ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610351565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113f39190611c2e565b60006040518083038185875af1925050503d8060008114611430576040519150601f19603f3d011682016040523d82523d6000602084013e611435565b606091505b509150915061144687838387611451565b979650505050505050565b606083156114e75782516000036114e05773ffffffffffffffffffffffffffffffffffffffff85163b6114e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610351565b5081611330565b61133083838151156114fc5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103519190611c4a565b60008083601f84011261154257600080fd5b50813567ffffffffffffffff81111561155a57600080fd5b6020830191508360208260051b850101111561157557600080fd5b9250929050565b6000806000806000806060878903121561159557600080fd5b863567ffffffffffffffff808211156115ad57600080fd5b6115b98a838b01611530565b909850965060208901359150808211156115d257600080fd5b6115de8a838b01611530565b909650945060408901359150808211156115f757600080fd5b5061160489828a01611530565b979a9699509497509295939492505050565b6000610100828403121561162957600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461165157600080fd5b50565b60006020828403121561166657600080fd5b81356116718161162f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126116dc57600080fd5b83018035915067ffffffffffffffff8211156116f757600080fd5b60200191503681900382131561157557600080fd5b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60005b83811015611780578181015183820152602001611768565b50506000910152565b600081518084526117a1816020860160208601611765565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015260806040820152600061180960808301858761171c565b828103606084015261181b8185611789565b98975050505050505050565b6000838385526020808601955060208560051b8301018460005b878110156118ec577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18836030181126118a257600080fd5b8701848101903567ffffffffffffffff8111156118be57600080fd5b8036038213156118cd57600080fd5b6118d885828461171c565b9a86019a9450505090830190600101611841565b5090979650505050505050565b6060808252810186905260008760808301825b8981101561194957823561191f8161162f565b73ffffffffffffffffffffffffffffffffffffffff1682526020928301929091019060010161190c565b5083810360208501528681527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff87111561198257600080fd5b8660051b91508188602083013701828103602090810160408501526119aa9082018587611827565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610651576106516119e6565b81810381811115610651576106516119e6565b8281526040602082015260006113306040830184611789565b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401528088166040840152508560608301528460808301528360a083015260e060c08301526119aa60e0830184611789565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215611aec57600080fd5b815167ffffffffffffffff80821115611b0457600080fd5b818401915084601f830112611b1857600080fd5b815181811115611b2a57611b2a611aab565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611b7057611b70611aab565b81604052828152876020848701011115611b8957600080fd5b611446836020830160208801611765565b600060208284031215611bac57600080fd5b5051919050565b80820180821115610651576106516119e6565b600060208284031215611bd857600080fd5b81516116718161162f565b838152606060208201526000611bfc6060830185611789565b9050826040830152949350505050565b600060208284031215611c1e57600080fd5b8151801515811461167157600080fd5b60008251611c40818460208701611765565b9190910192915050565b602081526000611671602083018461178956fea264697066735822122018bbcd8e1349ce985713961e6c0e880954b24b2e12c69f94d9aa459f28b3e97264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class L2Forwarder__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "L2Forwarder";
    }
    deploy(_factory, overrides) {
        return super.deploy(_factory, overrides || {});
    }
    getDeployTransaction(_factory, overrides) {
        return super.getDeployTransaction(_factory, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.L2Forwarder__factory = L2Forwarder__factory;
L2Forwarder__factory.bytecode = _bytecode;
L2Forwarder__factory.abi = _abi;
